#Find all the groups a user is in
Get-ADPrincipalGroupMembership <username> | select name

#Check if user is enabled
 get-aduser <username> | select samaccountname,enabled

#Change Password
Set-AdAccountPassword -Identity <username> -OldPassword (Read-Host -asSecureString "Enter the current password") -NewPassword (Read-Host -asSecureString "Enter the new password")

#Find all running services on a server
Get-Service -ComputerName <server> | Where-Object {$_.Status -eq "Running"}

#Check the size of a folder local
"{0} MB" -f ((Get-ChildItem <Folder> -Recurse | Measure-Object -Property Length -Sum -ErrorAction Stop).Sum / 1MB)

#Check Disk Usage remote
Invoke-Command -ComputerName <ComputerName> {Get-PSDrive -PSProvider FileSystem }  | Select-Object root,@{Name="Used (GB)"; Expression={[math]::Round($_.used / 1GB,2)}},@{Name="Free (GB)"; Expression={[math]::Round($_.Free / 1GB,2)}} | Format-Table

#Find Uptime on a remote server
$computer = "<computerName>"
(Get-Date) - [Management.ManagementDateTimeConverter]::ToDateTime((Get-WmiObject Win32_OperatingSystem -ComputerName $computer).LastBootUpTime) | Format-Table
